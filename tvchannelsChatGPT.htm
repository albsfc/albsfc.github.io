<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic TV Channels</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        h1 {
            text-align: center;
        }
        .channel {
            margin-bottom: 20px;
            text-align: center;
        }
        video {
            width: 100%;
            max-width: 500px;
            background-color: #000;
        }
        h3 {
            margin-top: 0;
        }
    </style>
</head>
<body>
    <h1>TV Channels</h1>
    <div id="channels-container">
        <!-- Channels will be dynamically generated here -->
    </div>

    <script>
        async function loadChannels() {
            try {
                const response = await fetch('https://i.mjh.nz/au/Sydney/raw-tv.m3u8');
                const data = await response.text();
                const lines = data.split('\n');
                const channelsContainer = document.getElementById('channels-container');
                channelsContainer.innerHTML = ''; // Clear previous content if any

                let currentChannelName = '';
                lines.forEach(line => {
                    if (line.startsWith('#EXTINF')) {
                        currentChannelName = line.split(',')[1].trim();
                    } else if (line.startsWith('http') && currentChannelName) {
                        // Create channel HTML elements
                        const channelDiv = document.createElement('div');
                        channelDiv.className = 'channel';

                        const title = document.createElement('h3');
                        title.textContent = currentChannelName;
                        channelDiv.appendChild(title);

                        const video = document.createElement('video');
                        video.controls = true;

                        const source = document.createElement('source');
                        source.src = line;
                        source.type = 'application/vnd.apple.mpegurl';
                        video.appendChild(source);

                        channelDiv.appendChild(video);
                        channelsContainer.appendChild(channelDiv);

                        // Reset for the next channel
                        currentChannelName = '';
                    }
                });
            } catch (error) {
                console.error('Error loading channels:', error);
                document.getElementById('channels-container').innerHTML = '<p>Failed to load channels.</p>';
            }
        }

        // Load channels on page load
        window.onload = loadChannels;
    </script>
</body>
</html>
