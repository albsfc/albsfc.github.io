<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TV Channels</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #000;
            color: #fff;
            padding: 20px;
        }
        h1 {
            text-align: center;
        }
        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 20px;
            padding: 20px;
        }
        .channel {
            text-align: center;
        }
        .channel img {
            width: 100px;
            height: 100px;
            object-fit: contain;
            background-color: #333;
            cursor: pointer;
            border-radius: 8px;
        }
        .channel-name {
            margin-top: 10px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>TV Channels</h1>
    <div id="channels-container" class="grid-container">
        <!-- Channels will be dynamically generated here -->
    </div>

    <script>
        async function loadChannels() {
            try {
                const response = await fetch('https://i.mjh.nz/au/Sydney/raw-tv.m3u8');
                const data = await response.text();
                const lines = data.split('\n');
                const channelsContainer = document.getElementById('channels-container');
                channelsContainer.innerHTML = ''; // Clear previous content if any

                let currentChannelName = '';
                let currentLogoUrl = '';
                lines.forEach(line => {
                    if (line.startsWith('#EXTINF')) {
                        const parts = line.split(',');
                        currentChannelName = parts[1].trim();

                        // Check for logo attribute in #EXTINF line
                        const logoMatch = line.match(/tvg-logo="([^"]+)"/);
                        currentLogoUrl = logoMatch ? logoMatch[1] : 'https://via.placeholder.com/100?text=No+Logo';
                    } else if (line.startsWith('http') && currentChannelName) {
                        // Create channel HTML elements
                        const channelDiv = document.createElement('div');
                        channelDiv.className = 'channel';

                        const img = document.createElement('img');
                        img.src = currentLogoUrl; // Use logo URL from m3u8 or fallback
                        img.alt = currentChannelName;
                        img.onclick = () => window.open(line, '_blank');

                        const title = document.createElement('div');
                        title.className = 'channel-name';
                        title.textContent = currentChannelName;

                        channelDiv.appendChild(img);
                        channelDiv.appendChild(title);
                        channelsContainer.appendChild(channelDiv);

                        // Reset for the next channel
                        currentChannelName = '';
                        currentLogoUrl = '';
                    }
                });
            } catch (error) {
                console.error('Error loading channels:', error);
                document.getElementById('channels-container').innerHTML = '<p>Failed to load channels.</p>';
            }
        }

        // Load channels on page load
        window.onload = loadChannels;
    </script>
</body>
</html>
