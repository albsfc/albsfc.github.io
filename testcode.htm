<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TV Channel List</title>
    <style>
        /* Basic styling for the grid layout */
        .channel-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .channel-card {
            border: 1px solid #ccc;
            padding: 10px;
            text-align: center;
            cursor: pointer;
        }

        .channel-card:hover {
            background-color: #f0f0f0;
        }

        .channel-logo {
            max-width: 100px;
            max-height: 50px;
            margin-bottom: 10px;
        }

        /* Styles for the video modal */
        .modal {
            display: none; /* Hidden by default */
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.9);
        }

        .modal-content {
            margin: 15% auto;
            width: 80%;
            max-width: 800px;
            background-color: #fff;
            position: relative;
            padding: 20px;
            text-align: center;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="channel-grid" id="channelGrid">
        <!-- Channels will be dynamically added here -->
    </div>

    <!-- Modal for video player -->
    <div id="videoModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <video id="videoPlayer" controls autoplay></video>
        </div>
    </div>

    <script>
        // Function to fetch and display channels from M3U8 playlist
        async function fetchChannels() {
            const playlistUrl = 'https://i.mjh.nz/au/Sydney/raw-tv.m3u8';
            
            try {
                const response = await fetch(playlistUrl);
                const data = await response.text();
                const lines = data.split('\n');
                
                const channelGrid = document.getElementById('channelGrid');
                
                for (let i = 0; i < lines.length; i++) {
                    let line = lines[i].trim();
                    if (line.startsWith('#EXTINF:')) {
                        // Extract channel name from #EXTINF line
                        const channelName = line.split(',')[1].trim();
                        
                        // Extract logo URL if available
                        let logoUrl = null;
                        if (lines[i + 1] && lines[i + 1].trim().startsWith('http')) {
                            logoUrl = lines[i + 1].trim();
                        }
                        
                        // Create channel card
                        const channelCard = document.createElement('div');
                        channelCard.classList.add('channel-card');
                        
                        // Create channel logo if available
                        if (logoUrl) {
                            const logoImg = document.createElement('img');
                            logoImg.src = logoUrl;
                            logoImg.alt = `${channelName} Logo`;
                            logoImg.classList.add('channel-logo');
                            channelCard.appendChild(logoImg);
                        }
                        
                        // Create channel name text
                        const channelNameText = document.createElement('div');
                        channelNameText.textContent = channelName;
                        channelCard.appendChild(channelNameText);
                        
                        // Add click event to play video
                        channelCard.addEventListener('click', () => {
                            openVideo(lines[i + 1].trim());
                        });
                        
                        // Append channel card to grid
                        channelGrid.appendChild(channelCard);
                    }
                }
                
            } catch (error) {
                console.error('Error fetching channels:', error);
            }
        }
        
        // Function to open video modal and play selected video
        function openVideo(videoUrl) {
            const videoPlayer = document.getElementById('videoPlayer');
            videoPlayer.src = videoUrl;
            
            const modal = document.getElementById('videoModal');
            modal.style.display = 'block';
            
            const closeModal = document.querySelector('.close');
            closeModal.addEventListener('click', () => {
                modal.style.display = 'none';
                videoPlayer.pause();
                videoPlayer.src = ''; // Clear video source
            });
        }
        
        // Fetch channels when the page loads
        window.onload = fetchChannels;
    </script>
</body>
</html>
